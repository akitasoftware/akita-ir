// source: sequence.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.api_spec.DataTemplate');
goog.provide('proto.api_spec.DataTemplate.ValueTemplateCase');
goog.provide('proto.api_spec.ListTemplate');
goog.provide('proto.api_spec.OptionalTemplate');
goog.provide('proto.api_spec.StructTemplate');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.api_spec.Data');
goog.require('proto.api_spec.DataMeta');
goog.require('proto.api_spec.MethodDataRef');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.DataTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.DataTemplate.oneofGroups_);
};
goog.inherits(proto.api_spec.DataTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.DataTemplate.displayName = 'proto.api_spec.DataTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_spec.ListTemplate.repeatedFields_, null);
};
goog.inherits(proto.api_spec.ListTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListTemplate.displayName = 'proto.api_spec.ListTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.OptionalTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.OptionalTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.OptionalTemplate.displayName = 'proto.api_spec.OptionalTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.StructTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructTemplate.displayName = 'proto.api_spec.StructTemplate';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.DataTemplate.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.api_spec.DataTemplate.ValueTemplateCase = {
  VALUE_TEMPLATE_NOT_SET: 0,
  STRUCT_TEMPLATE: 1,
  LIST_TEMPLATE: 2,
  VALUE: 3,
  REF: 4,
  OPTIONAL_TEMPLATE: 5
};

/**
 * @return {proto.api_spec.DataTemplate.ValueTemplateCase}
 */
proto.api_spec.DataTemplate.prototype.getValueTemplateCase = function() {
  return /** @type {proto.api_spec.DataTemplate.ValueTemplateCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.DataTemplate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.DataTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.DataTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.DataTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    structTemplate: (f = msg.getStructTemplate()) && proto.api_spec.StructTemplate.toObject(includeInstance, f),
    listTemplate: (f = msg.getListTemplate()) && proto.api_spec.ListTemplate.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.api_spec.Data.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && proto.api_spec.MethodDataRef.toObject(includeInstance, f),
    optionalTemplate: (f = msg.getOptionalTemplate()) && proto.api_spec.OptionalTemplate.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.api_spec.DataMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.DataTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.DataTemplate;
  return proto.api_spec.DataTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.DataTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.DataTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.StructTemplate;
      reader.readMessage(value,proto.api_spec.StructTemplate.deserializeBinaryFromReader);
      msg.setStructTemplate(value);
      break;
    case 2:
      var value = new proto.api_spec.ListTemplate;
      reader.readMessage(value,proto.api_spec.ListTemplate.deserializeBinaryFromReader);
      msg.setListTemplate(value);
      break;
    case 3:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 4:
      var value = new proto.api_spec.MethodDataRef;
      reader.readMessage(value,proto.api_spec.MethodDataRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 5:
      var value = new proto.api_spec.OptionalTemplate;
      reader.readMessage(value,proto.api_spec.OptionalTemplate.deserializeBinaryFromReader);
      msg.setOptionalTemplate(value);
      break;
    case 6:
      var value = new proto.api_spec.DataMeta;
      reader.readMessage(value,proto.api_spec.DataMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.DataTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.DataTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.DataTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.StructTemplate.serializeBinaryToWriter
    );
  }
  f = message.getListTemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.ListTemplate.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.MethodDataRef.serializeBinaryToWriter
    );
  }
  f = message.getOptionalTemplate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.OptionalTemplate.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.DataMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional StructTemplate struct_template = 1;
 * @return {?proto.api_spec.StructTemplate}
 */
proto.api_spec.DataTemplate.prototype.getStructTemplate = function() {
  return /** @type{?proto.api_spec.StructTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructTemplate, 1));
};


/**
 * @param {?proto.api_spec.StructTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setStructTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearStructTemplate = function() {
  return this.setStructTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasStructTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListTemplate list_template = 2;
 * @return {?proto.api_spec.ListTemplate}
 */
proto.api_spec.DataTemplate.prototype.getListTemplate = function() {
  return /** @type{?proto.api_spec.ListTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListTemplate, 2));
};


/**
 * @param {?proto.api_spec.ListTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setListTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearListTemplate = function() {
  return this.setListTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasListTemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data value = 3;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.DataTemplate.prototype.getValue = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 3));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MethodDataRef ref = 4;
 * @return {?proto.api_spec.MethodDataRef}
 */
proto.api_spec.DataTemplate.prototype.getRef = function() {
  return /** @type{?proto.api_spec.MethodDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MethodDataRef, 4));
};


/**
 * @param {?proto.api_spec.MethodDataRef|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearRef = function() {
  return this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasRef = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OptionalTemplate optional_template = 5;
 * @return {?proto.api_spec.OptionalTemplate}
 */
proto.api_spec.DataTemplate.prototype.getOptionalTemplate = function() {
  return /** @type{?proto.api_spec.OptionalTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.OptionalTemplate, 5));
};


/**
 * @param {?proto.api_spec.OptionalTemplate|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setOptionalTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.DataTemplate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearOptionalTemplate = function() {
  return this.setOptionalTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasOptionalTemplate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DataMeta meta = 6;
 * @return {?proto.api_spec.DataMeta}
 */
proto.api_spec.DataTemplate.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.DataMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataMeta, 6));
};


/**
 * @param {?proto.api_spec.DataMeta|undefined} value
 * @return {!proto.api_spec.DataTemplate} returns this
*/
proto.api_spec.DataTemplate.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataTemplate} returns this
 */
proto.api_spec.DataTemplate.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataTemplate.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_spec.ListTemplate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    elemTemplatesList: jspb.Message.toObjectList(msg.getElemTemplatesList(),
    proto.api_spec.DataTemplate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListTemplate}
 */
proto.api_spec.ListTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListTemplate;
  return proto.api_spec.ListTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListTemplate}
 */
proto.api_spec.ListTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.DataTemplate;
      reader.readMessage(value,proto.api_spec.DataTemplate.deserializeBinaryFromReader);
      msg.addElemTemplates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElemTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_spec.DataTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataTemplate elem_templates = 1;
 * @return {!Array<!proto.api_spec.DataTemplate>}
 */
proto.api_spec.ListTemplate.prototype.getElemTemplatesList = function() {
  return /** @type{!Array<!proto.api_spec.DataTemplate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_spec.DataTemplate, 1));
};


/**
 * @param {!Array<!proto.api_spec.DataTemplate>} value
 * @return {!proto.api_spec.ListTemplate} returns this
*/
proto.api_spec.ListTemplate.prototype.setElemTemplatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_spec.DataTemplate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_spec.DataTemplate}
 */
proto.api_spec.ListTemplate.prototype.addElemTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_spec.DataTemplate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api_spec.ListTemplate} returns this
 */
proto.api_spec.ListTemplate.prototype.clearElemTemplatesList = function() {
  return this.setElemTemplatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.OptionalTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.OptionalTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.OptionalTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OptionalTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueTemplate: (f = msg.getValueTemplate()) && proto.api_spec.DataTemplate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.OptionalTemplate}
 */
proto.api_spec.OptionalTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.OptionalTemplate;
  return proto.api_spec.OptionalTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.OptionalTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.OptionalTemplate}
 */
proto.api_spec.OptionalTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.DataTemplate;
      reader.readMessage(value,proto.api_spec.DataTemplate.deserializeBinaryFromReader);
      msg.setValueTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.OptionalTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.OptionalTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.OptionalTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OptionalTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.DataTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataTemplate value_template = 1;
 * @return {?proto.api_spec.DataTemplate}
 */
proto.api_spec.OptionalTemplate.prototype.getValueTemplate = function() {
  return /** @type{?proto.api_spec.DataTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataTemplate, 1));
};


/**
 * @param {?proto.api_spec.DataTemplate|undefined} value
 * @return {!proto.api_spec.OptionalTemplate} returns this
*/
proto.api_spec.OptionalTemplate.prototype.setValueTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.OptionalTemplate} returns this
 */
proto.api_spec.OptionalTemplate.prototype.clearValueTemplate = function() {
  return this.setValueTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.OptionalTemplate.prototype.hasValueTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldTemplatesMap: (f = msg.getFieldTemplatesMap()) ? f.toObject(includeInstance, proto.api_spec.DataTemplate.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructTemplate}
 */
proto.api_spec.StructTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructTemplate;
  return proto.api_spec.StructTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructTemplate}
 */
proto.api_spec.StructTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldTemplatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.DataTemplate.deserializeBinaryFromReader, "", new proto.api_spec.DataTemplate());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldTemplatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.DataTemplate.serializeBinaryToWriter);
  }
};


/**
 * map<string, DataTemplate> field_templates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.DataTemplate>}
 */
proto.api_spec.StructTemplate.prototype.getFieldTemplatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.DataTemplate>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.DataTemplate));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.StructTemplate} returns this
 */
proto.api_spec.StructTemplate.prototype.clearFieldTemplatesMap = function() {
  this.getFieldTemplatesMap().clear();
  return this;};


