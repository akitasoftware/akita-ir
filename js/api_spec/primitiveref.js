// source: sequence.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.api_spec.PrimitiveRef');
goog.provide('proto.api_spec.PrimitiveRef.TypeCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.api_spec.BoolType');
goog.require('proto.api_spec.BytesType');
goog.require('proto.api_spec.DoubleType');
goog.require('proto.api_spec.FloatType');
goog.require('proto.api_spec.Int32Type');
goog.require('proto.api_spec.Int64Type');
goog.require('proto.api_spec.StringType');
goog.require('proto.api_spec.Uint32Type');
goog.require('proto.api_spec.Uint64Type');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.PrimitiveRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.PrimitiveRef.oneofGroups_);
};
goog.inherits(proto.api_spec.PrimitiveRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.PrimitiveRef.displayName = 'proto.api_spec.PrimitiveRef';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.PrimitiveRef.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.api_spec.PrimitiveRef.TypeCase = {
  TYPE_NOT_SET: 0,
  BOOL_TYPE: 1,
  BYTES_TYPE: 2,
  STRING_TYPE: 3,
  INT32_TYPE: 4,
  INT64_TYPE: 5,
  UINT32_TYPE: 6,
  UINT64_TYPE: 7,
  DOUBLE_TYPE: 8,
  FLOAT_TYPE: 9
};

/**
 * @return {proto.api_spec.PrimitiveRef.TypeCase}
 */
proto.api_spec.PrimitiveRef.prototype.getTypeCase = function() {
  return /** @type {proto.api_spec.PrimitiveRef.TypeCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.PrimitiveRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.PrimitiveRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.PrimitiveRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.PrimitiveRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.PrimitiveRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    boolType: (f = msg.getBoolType()) && proto.api_spec.BoolType.toObject(includeInstance, f),
    bytesType: (f = msg.getBytesType()) && proto.api_spec.BytesType.toObject(includeInstance, f),
    stringType: (f = msg.getStringType()) && proto.api_spec.StringType.toObject(includeInstance, f),
    int32Type: (f = msg.getInt32Type()) && proto.api_spec.Int32Type.toObject(includeInstance, f),
    int64Type: (f = msg.getInt64Type()) && proto.api_spec.Int64Type.toObject(includeInstance, f),
    uint32Type: (f = msg.getUint32Type()) && proto.api_spec.Uint32Type.toObject(includeInstance, f),
    uint64Type: (f = msg.getUint64Type()) && proto.api_spec.Uint64Type.toObject(includeInstance, f),
    doubleType: (f = msg.getDoubleType()) && proto.api_spec.DoubleType.toObject(includeInstance, f),
    floatType: (f = msg.getFloatType()) && proto.api_spec.FloatType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.PrimitiveRef}
 */
proto.api_spec.PrimitiveRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.PrimitiveRef;
  return proto.api_spec.PrimitiveRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.PrimitiveRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.PrimitiveRef}
 */
proto.api_spec.PrimitiveRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.BoolType;
      reader.readMessage(value,proto.api_spec.BoolType.deserializeBinaryFromReader);
      msg.setBoolType(value);
      break;
    case 2:
      var value = new proto.api_spec.BytesType;
      reader.readMessage(value,proto.api_spec.BytesType.deserializeBinaryFromReader);
      msg.setBytesType(value);
      break;
    case 3:
      var value = new proto.api_spec.StringType;
      reader.readMessage(value,proto.api_spec.StringType.deserializeBinaryFromReader);
      msg.setStringType(value);
      break;
    case 4:
      var value = new proto.api_spec.Int32Type;
      reader.readMessage(value,proto.api_spec.Int32Type.deserializeBinaryFromReader);
      msg.setInt32Type(value);
      break;
    case 5:
      var value = new proto.api_spec.Int64Type;
      reader.readMessage(value,proto.api_spec.Int64Type.deserializeBinaryFromReader);
      msg.setInt64Type(value);
      break;
    case 6:
      var value = new proto.api_spec.Uint32Type;
      reader.readMessage(value,proto.api_spec.Uint32Type.deserializeBinaryFromReader);
      msg.setUint32Type(value);
      break;
    case 7:
      var value = new proto.api_spec.Uint64Type;
      reader.readMessage(value,proto.api_spec.Uint64Type.deserializeBinaryFromReader);
      msg.setUint64Type(value);
      break;
    case 8:
      var value = new proto.api_spec.DoubleType;
      reader.readMessage(value,proto.api_spec.DoubleType.deserializeBinaryFromReader);
      msg.setDoubleType(value);
      break;
    case 9:
      var value = new proto.api_spec.FloatType;
      reader.readMessage(value,proto.api_spec.FloatType.deserializeBinaryFromReader);
      msg.setFloatType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.PrimitiveRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.PrimitiveRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.PrimitiveRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.PrimitiveRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoolType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.BoolType.serializeBinaryToWriter
    );
  }
  f = message.getBytesType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.BytesType.serializeBinaryToWriter
    );
  }
  f = message.getStringType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.StringType.serializeBinaryToWriter
    );
  }
  f = message.getInt32Type();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.Int32Type.serializeBinaryToWriter
    );
  }
  f = message.getInt64Type();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.Int64Type.serializeBinaryToWriter
    );
  }
  f = message.getUint32Type();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.Uint32Type.serializeBinaryToWriter
    );
  }
  f = message.getUint64Type();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api_spec.Uint64Type.serializeBinaryToWriter
    );
  }
  f = message.getDoubleType();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api_spec.DoubleType.serializeBinaryToWriter
    );
  }
  f = message.getFloatType();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api_spec.FloatType.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoolType bool_type = 1;
 * @return {?proto.api_spec.BoolType}
 */
proto.api_spec.PrimitiveRef.prototype.getBoolType = function() {
  return /** @type{?proto.api_spec.BoolType} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.BoolType, 1));
};


/**
 * @param {?proto.api_spec.BoolType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setBoolType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearBoolType = function() {
  return this.setBoolType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasBoolType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BytesType bytes_type = 2;
 * @return {?proto.api_spec.BytesType}
 */
proto.api_spec.PrimitiveRef.prototype.getBytesType = function() {
  return /** @type{?proto.api_spec.BytesType} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.BytesType, 2));
};


/**
 * @param {?proto.api_spec.BytesType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setBytesType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearBytesType = function() {
  return this.setBytesType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasBytesType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringType string_type = 3;
 * @return {?proto.api_spec.StringType}
 */
proto.api_spec.PrimitiveRef.prototype.getStringType = function() {
  return /** @type{?proto.api_spec.StringType} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StringType, 3));
};


/**
 * @param {?proto.api_spec.StringType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setStringType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearStringType = function() {
  return this.setStringType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasStringType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Int32Type int32_type = 4;
 * @return {?proto.api_spec.Int32Type}
 */
proto.api_spec.PrimitiveRef.prototype.getInt32Type = function() {
  return /** @type{?proto.api_spec.Int32Type} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Int32Type, 4));
};


/**
 * @param {?proto.api_spec.Int32Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setInt32Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearInt32Type = function() {
  return this.setInt32Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasInt32Type = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Int64Type int64_type = 5;
 * @return {?proto.api_spec.Int64Type}
 */
proto.api_spec.PrimitiveRef.prototype.getInt64Type = function() {
  return /** @type{?proto.api_spec.Int64Type} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Int64Type, 5));
};


/**
 * @param {?proto.api_spec.Int64Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setInt64Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearInt64Type = function() {
  return this.setInt64Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasInt64Type = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Uint32Type uint32_type = 6;
 * @return {?proto.api_spec.Uint32Type}
 */
proto.api_spec.PrimitiveRef.prototype.getUint32Type = function() {
  return /** @type{?proto.api_spec.Uint32Type} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Uint32Type, 6));
};


/**
 * @param {?proto.api_spec.Uint32Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setUint32Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearUint32Type = function() {
  return this.setUint32Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasUint32Type = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Uint64Type uint64_type = 7;
 * @return {?proto.api_spec.Uint64Type}
 */
proto.api_spec.PrimitiveRef.prototype.getUint64Type = function() {
  return /** @type{?proto.api_spec.Uint64Type} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Uint64Type, 7));
};


/**
 * @param {?proto.api_spec.Uint64Type|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setUint64Type = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearUint64Type = function() {
  return this.setUint64Type(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasUint64Type = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DoubleType double_type = 8;
 * @return {?proto.api_spec.DoubleType}
 */
proto.api_spec.PrimitiveRef.prototype.getDoubleType = function() {
  return /** @type{?proto.api_spec.DoubleType} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DoubleType, 8));
};


/**
 * @param {?proto.api_spec.DoubleType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setDoubleType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearDoubleType = function() {
  return this.setDoubleType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasDoubleType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FloatType float_type = 9;
 * @return {?proto.api_spec.FloatType}
 */
proto.api_spec.PrimitiveRef.prototype.getFloatType = function() {
  return /** @type{?proto.api_spec.FloatType} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.FloatType, 9));
};


/**
 * @param {?proto.api_spec.FloatType|undefined} value
 * @return {!proto.api_spec.PrimitiveRef} returns this
*/
proto.api_spec.PrimitiveRef.prototype.setFloatType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.api_spec.PrimitiveRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.PrimitiveRef} returns this
 */
proto.api_spec.PrimitiveRef.prototype.clearFloatType = function() {
  return this.setFloatType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.PrimitiveRef.prototype.hasFloatType = function() {
  return jspb.Message.getField(this, 9) != null;
};


