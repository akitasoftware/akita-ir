// source: method.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.api_spec.Data');
goog.provide('proto.api_spec.Data.ValueCase');
goog.provide('proto.api_spec.List');
goog.provide('proto.api_spec.MapData');
goog.provide('proto.api_spec.OneOf');
goog.provide('proto.api_spec.Optional');
goog.provide('proto.api_spec.Optional.ValueCase');
goog.provide('proto.api_spec.Struct');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.api_spec.DataMeta');
goog.require('proto.api_spec.ExampleValue');
goog.require('proto.api_spec.None');
goog.require('proto.api_spec.Primitive');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.Data.oneofGroups_);
};
goog.inherits(proto.api_spec.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Data.displayName = 'proto.api_spec.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_spec.List.repeatedFields_, null);
};
goog.inherits(proto.api_spec.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.List.displayName = 'proto.api_spec.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.MapData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.MapData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.MapData.displayName = 'proto.api_spec.MapData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.OneOf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.OneOf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.OneOf.displayName = 'proto.api_spec.OneOf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Optional = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.Optional.oneofGroups_);
};
goog.inherits(proto.api_spec.Optional, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Optional.displayName = 'proto.api_spec.Optional';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.Struct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.Struct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.Struct.displayName = 'proto.api_spec.Struct';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.Data.oneofGroups_ = [[1,2,3,4,6]];

/**
 * @enum {number}
 */
proto.api_spec.Data.ValueCase = {
  VALUE_NOT_SET: 0,
  PRIMITIVE: 1,
  STRUCT: 2,
  LIST: 3,
  OPTIONAL: 4,
  ONEOF: 6
};

/**
 * @return {proto.api_spec.Data.ValueCase}
 */
proto.api_spec.Data.prototype.getValueCase = function() {
  return /** @type {proto.api_spec.Data.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.Data.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitive: (f = msg.getPrimitive()) && proto.api_spec.Primitive.toObject(includeInstance, f),
    struct: (f = msg.getStruct()) && proto.api_spec.Struct.toObject(includeInstance, f),
    list: (f = msg.getList()) && proto.api_spec.List.toObject(includeInstance, f),
    optional: (f = msg.getOptional()) && proto.api_spec.Optional.toObject(includeInstance, f),
    oneof: (f = msg.getOneof()) && proto.api_spec.OneOf.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.api_spec.DataMeta.toObject(includeInstance, f),
    nullable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    exampleValuesMap: (f = msg.getExampleValuesMap()) ? f.toObject(includeInstance, proto.api_spec.ExampleValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Data;
  return proto.api_spec.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Primitive;
      reader.readMessage(value,proto.api_spec.Primitive.deserializeBinaryFromReader);
      msg.setPrimitive(value);
      break;
    case 2:
      var value = new proto.api_spec.Struct;
      reader.readMessage(value,proto.api_spec.Struct.deserializeBinaryFromReader);
      msg.setStruct(value);
      break;
    case 3:
      var value = new proto.api_spec.List;
      reader.readMessage(value,proto.api_spec.List.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 4:
      var value = new proto.api_spec.Optional;
      reader.readMessage(value,proto.api_spec.Optional.deserializeBinaryFromReader);
      msg.setOptional(value);
      break;
    case 6:
      var value = new proto.api_spec.OneOf;
      reader.readMessage(value,proto.api_spec.OneOf.deserializeBinaryFromReader);
      msg.setOneof(value);
      break;
    case 5:
      var value = new proto.api_spec.DataMeta;
      reader.readMessage(value,proto.api_spec.DataMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNullable(value);
      break;
    case 8:
      var value = msg.getExampleValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.ExampleValue.deserializeBinaryFromReader, "", new proto.api_spec.ExampleValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimitive();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Primitive.serializeBinaryToWriter
    );
  }
  f = message.getStruct();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.Struct.serializeBinaryToWriter
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.List.serializeBinaryToWriter
    );
  }
  f = message.getOptional();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_spec.Optional.serializeBinaryToWriter
    );
  }
  f = message.getOneof();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api_spec.OneOf.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_spec.DataMeta.serializeBinaryToWriter
    );
  }
  f = message.getNullable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getExampleValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.ExampleValue.serializeBinaryToWriter);
  }
};


/**
 * optional Primitive primitive = 1;
 * @return {?proto.api_spec.Primitive}
 */
proto.api_spec.Data.prototype.getPrimitive = function() {
  return /** @type{?proto.api_spec.Primitive} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Primitive, 1));
};


/**
 * @param {?proto.api_spec.Primitive|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setPrimitive = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearPrimitive = function() {
  return this.setPrimitive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasPrimitive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Struct struct = 2;
 * @return {?proto.api_spec.Struct}
 */
proto.api_spec.Data.prototype.getStruct = function() {
  return /** @type{?proto.api_spec.Struct} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Struct, 2));
};


/**
 * @param {?proto.api_spec.Struct|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearStruct = function() {
  return this.setStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasStruct = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional List list = 3;
 * @return {?proto.api_spec.List}
 */
proto.api_spec.Data.prototype.getList = function() {
  return /** @type{?proto.api_spec.List} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.List, 3));
};


/**
 * @param {?proto.api_spec.List|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearList = function() {
  return this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Optional optional = 4;
 * @return {?proto.api_spec.Optional}
 */
proto.api_spec.Data.prototype.getOptional = function() {
  return /** @type{?proto.api_spec.Optional} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Optional, 4));
};


/**
 * @param {?proto.api_spec.Optional|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setOptional = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearOptional = function() {
  return this.setOptional(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasOptional = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OneOf oneof = 6;
 * @return {?proto.api_spec.OneOf}
 */
proto.api_spec.Data.prototype.getOneof = function() {
  return /** @type{?proto.api_spec.OneOf} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.OneOf, 6));
};


/**
 * @param {?proto.api_spec.OneOf|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setOneof = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api_spec.Data.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearOneof = function() {
  return this.setOneof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasOneof = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DataMeta meta = 5;
 * @return {?proto.api_spec.DataMeta}
 */
proto.api_spec.Data.prototype.getMeta = function() {
  return /** @type{?proto.api_spec.DataMeta} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataMeta, 5));
};


/**
 * @param {?proto.api_spec.DataMeta|undefined} value
 * @return {!proto.api_spec.Data} returns this
*/
proto.api_spec.Data.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Data.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool nullable = 7;
 * @return {boolean}
 */
proto.api_spec.Data.prototype.getNullable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.setNullable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * map<string, ExampleValue> example_values = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.ExampleValue>}
 */
proto.api_spec.Data.prototype.getExampleValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.ExampleValue>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.api_spec.ExampleValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Data} returns this
 */
proto.api_spec.Data.prototype.clearExampleValuesMap = function() {
  this.getExampleValuesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_spec.List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.List.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    elemsList: jspb.Message.toObjectList(msg.getElemsList(),
    proto.api_spec.Data.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.List}
 */
proto.api_spec.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.List;
  return proto.api_spec.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.List}
 */
proto.api_spec.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.addElems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Data elems = 1;
 * @return {!Array<!proto.api_spec.Data>}
 */
proto.api_spec.List.prototype.getElemsList = function() {
  return /** @type{!Array<!proto.api_spec.Data>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {!Array<!proto.api_spec.Data>} value
 * @return {!proto.api_spec.List} returns this
*/
proto.api_spec.List.prototype.setElemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_spec.Data=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_spec.Data}
 */
proto.api_spec.List.prototype.addElems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_spec.Data, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api_spec.List} returns this
 */
proto.api_spec.List.prototype.clearElemsList = function() {
  return this.setElemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.MapData.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.MapData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.MapData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MapData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.api_spec.Data.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.api_spec.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.MapData}
 */
proto.api_spec.MapData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.MapData;
  return proto.api_spec.MapData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.MapData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.MapData}
 */
proto.api_spec.MapData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.MapData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.MapData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.MapData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.MapData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional Data key = 1;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.MapData.prototype.getKey = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.MapData} returns this
*/
proto.api_spec.MapData.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MapData} returns this
 */
proto.api_spec.MapData.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MapData.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data value = 2;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.MapData.prototype.getValue = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 2));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.MapData} returns this
*/
proto.api_spec.MapData.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.MapData} returns this
 */
proto.api_spec.MapData.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.MapData.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.OneOf.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.OneOf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.OneOf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OneOf.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    potentialConflict: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.OneOf}
 */
proto.api_spec.OneOf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.OneOf;
  return proto.api_spec.OneOf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.OneOf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.OneOf}
 */
proto.api_spec.OneOf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPotentialConflict(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.OneOf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.OneOf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.OneOf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.OneOf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getPotentialConflict();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * map<string, Data> options = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.OneOf.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.OneOf} returns this
 */
proto.api_spec.OneOf.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;};


/**
 * optional bool potential_conflict = 2;
 * @return {boolean}
 */
proto.api_spec.OneOf.prototype.getPotentialConflict = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api_spec.OneOf} returns this
 */
proto.api_spec.OneOf.prototype.setPotentialConflict = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.Optional.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.Optional.ValueCase = {
  VALUE_NOT_SET: 0,
  DATA: 1,
  NONE: 2
};

/**
 * @return {proto.api_spec.Optional.ValueCase}
 */
proto.api_spec.Optional.prototype.getValueCase = function() {
  return /** @type {proto.api_spec.Optional.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.Optional.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Optional.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Optional.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Optional} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Optional.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.api_spec.Data.toObject(includeInstance, f),
    none: (f = msg.getNone()) && proto.api_spec.None.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Optional}
 */
proto.api_spec.Optional.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Optional;
  return proto.api_spec.Optional.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Optional} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Optional}
 */
proto.api_spec.Optional.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.Data;
      reader.readMessage(value,proto.api_spec.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.api_spec.None;
      reader.readMessage(value,proto.api_spec.None.deserializeBinaryFromReader);
      msg.setNone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Optional.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Optional.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Optional} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Optional.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.Data.serializeBinaryToWriter
    );
  }
  f = message.getNone();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.None.serializeBinaryToWriter
    );
  }
};


/**
 * optional Data data = 1;
 * @return {?proto.api_spec.Data}
 */
proto.api_spec.Optional.prototype.getData = function() {
  return /** @type{?proto.api_spec.Data} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.Data, 1));
};


/**
 * @param {?proto.api_spec.Data|undefined} value
 * @return {!proto.api_spec.Optional} returns this
*/
proto.api_spec.Optional.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.Optional.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Optional} returns this
 */
proto.api_spec.Optional.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Optional.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional None none = 2;
 * @return {?proto.api_spec.None}
 */
proto.api_spec.Optional.prototype.getNone = function() {
  return /** @type{?proto.api_spec.None} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.None, 2));
};


/**
 * @param {?proto.api_spec.None|undefined} value
 * @return {!proto.api_spec.Optional} returns this
*/
proto.api_spec.Optional.prototype.setNone = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.Optional.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Optional} returns this
 */
proto.api_spec.Optional.prototype.clearNone = function() {
  return this.setNone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Optional.prototype.hasNone = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.Struct.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.Struct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.Struct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Struct.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.api_spec.Data.toObject) : [],
    mapType: (f = msg.getMapType()) && proto.api_spec.MapData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.Struct}
 */
proto.api_spec.Struct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.Struct;
  return proto.api_spec.Struct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.Struct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.Struct}
 */
proto.api_spec.Struct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api_spec.Data.deserializeBinaryFromReader, "", new proto.api_spec.Data());
         });
      break;
    case 2:
      var value = new proto.api_spec.MapData;
      reader.readMessage(value,proto.api_spec.MapData.deserializeBinaryFromReader);
      msg.setMapType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.Struct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.Struct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.Struct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.Struct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api_spec.Data.serializeBinaryToWriter);
  }
  f = message.getMapType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.MapData.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, Data> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api_spec.Data>}
 */
proto.api_spec.Struct.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api_spec.Data>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api_spec.Data));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api_spec.Struct} returns this
 */
proto.api_spec.Struct.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};


/**
 * optional MapData map_type = 2;
 * @return {?proto.api_spec.MapData}
 */
proto.api_spec.Struct.prototype.getMapType = function() {
  return /** @type{?proto.api_spec.MapData} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.MapData, 2));
};


/**
 * @param {?proto.api_spec.MapData|undefined} value
 * @return {!proto.api_spec.Struct} returns this
*/
proto.api_spec.Struct.prototype.setMapType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.Struct} returns this
 */
proto.api_spec.Struct.prototype.clearMapType = function() {
  return this.setMapType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.Struct.prototype.hasMapType = function() {
  return jspb.Message.getField(this, 2) != null;
};


