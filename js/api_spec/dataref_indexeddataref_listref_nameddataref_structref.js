// source: sequence.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.api_spec.DataRef');
goog.provide('proto.api_spec.DataRef.ValueRefCase');
goog.provide('proto.api_spec.IndexedDataRef');
goog.provide('proto.api_spec.ListRef');
goog.provide('proto.api_spec.ListRef.FullListRef');
goog.provide('proto.api_spec.ListRef.RefCase');
goog.provide('proto.api_spec.NamedDataRef');
goog.provide('proto.api_spec.StructRef');
goog.provide('proto.api_spec.StructRef.FullStructRef');
goog.provide('proto.api_spec.StructRef.RefCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.api_spec.PrimitiveRef');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.DataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.DataRef.oneofGroups_);
};
goog.inherits(proto.api_spec.DataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.DataRef.displayName = 'proto.api_spec.DataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.IndexedDataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.IndexedDataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.IndexedDataRef.displayName = 'proto.api_spec.IndexedDataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.ListRef.oneofGroups_);
};
goog.inherits(proto.api_spec.ListRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListRef.displayName = 'proto.api_spec.ListRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.ListRef.FullListRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.ListRef.FullListRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.ListRef.FullListRef.displayName = 'proto.api_spec.ListRef.FullListRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.NamedDataRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.NamedDataRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.NamedDataRef.displayName = 'proto.api_spec.NamedDataRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_spec.StructRef.oneofGroups_);
};
goog.inherits(proto.api_spec.StructRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructRef.displayName = 'proto.api_spec.StructRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_spec.StructRef.FullStructRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_spec.StructRef.FullStructRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_spec.StructRef.FullStructRef.displayName = 'proto.api_spec.StructRef.FullStructRef';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.DataRef.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.api_spec.DataRef.ValueRefCase = {
  VALUE_REF_NOT_SET: 0,
  PRIMITIVE_REF: 1,
  STRUCT_REF: 2,
  LIST_REF: 3
};

/**
 * @return {proto.api_spec.DataRef.ValueRefCase}
 */
proto.api_spec.DataRef.prototype.getValueRefCase = function() {
  return /** @type {proto.api_spec.DataRef.ValueRefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.DataRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.DataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.DataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.DataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitiveRef: (f = msg.getPrimitiveRef()) && proto.api_spec.PrimitiveRef.toObject(includeInstance, f),
    structRef: (f = msg.getStructRef()) && proto.api_spec.StructRef.toObject(includeInstance, f),
    listRef: (f = msg.getListRef()) && proto.api_spec.ListRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.DataRef}
 */
proto.api_spec.DataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.DataRef;
  return proto.api_spec.DataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.DataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.DataRef}
 */
proto.api_spec.DataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.PrimitiveRef;
      reader.readMessage(value,proto.api_spec.PrimitiveRef.deserializeBinaryFromReader);
      msg.setPrimitiveRef(value);
      break;
    case 2:
      var value = new proto.api_spec.StructRef;
      reader.readMessage(value,proto.api_spec.StructRef.deserializeBinaryFromReader);
      msg.setStructRef(value);
      break;
    case 3:
      var value = new proto.api_spec.ListRef;
      reader.readMessage(value,proto.api_spec.ListRef.deserializeBinaryFromReader);
      msg.setListRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.DataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.DataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.DataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.DataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimitiveRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.PrimitiveRef.serializeBinaryToWriter
    );
  }
  f = message.getStructRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.StructRef.serializeBinaryToWriter
    );
  }
  f = message.getListRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_spec.ListRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional PrimitiveRef primitive_ref = 1;
 * @return {?proto.api_spec.PrimitiveRef}
 */
proto.api_spec.DataRef.prototype.getPrimitiveRef = function() {
  return /** @type{?proto.api_spec.PrimitiveRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.PrimitiveRef, 1));
};


/**
 * @param {?proto.api_spec.PrimitiveRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setPrimitiveRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearPrimitiveRef = function() {
  return this.setPrimitiveRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasPrimitiveRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StructRef struct_ref = 2;
 * @return {?proto.api_spec.StructRef}
 */
proto.api_spec.DataRef.prototype.getStructRef = function() {
  return /** @type{?proto.api_spec.StructRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructRef, 2));
};


/**
 * @param {?proto.api_spec.StructRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setStructRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearStructRef = function() {
  return this.setStructRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasStructRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListRef list_ref = 3;
 * @return {?proto.api_spec.ListRef}
 */
proto.api_spec.DataRef.prototype.getListRef = function() {
  return /** @type{?proto.api_spec.ListRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListRef, 3));
};


/**
 * @param {?proto.api_spec.ListRef|undefined} value
 * @return {!proto.api_spec.DataRef} returns this
*/
proto.api_spec.DataRef.prototype.setListRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api_spec.DataRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.DataRef} returns this
 */
proto.api_spec.DataRef.prototype.clearListRef = function() {
  return this.setListRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.DataRef.prototype.hasListRef = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.IndexedDataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.IndexedDataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.IndexedDataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.IndexedDataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataRef: (f = msg.getDataRef()) && proto.api_spec.DataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.IndexedDataRef}
 */
proto.api_spec.IndexedDataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.IndexedDataRef;
  return proto.api_spec.IndexedDataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.IndexedDataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.IndexedDataRef}
 */
proto.api_spec.IndexedDataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 2:
      var value = new proto.api_spec.DataRef;
      reader.readMessage(value,proto.api_spec.DataRef.deserializeBinaryFromReader);
      msg.setDataRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.IndexedDataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.IndexedDataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.IndexedDataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.IndexedDataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.DataRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.api_spec.IndexedDataRef.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_spec.IndexedDataRef} returns this
 */
proto.api_spec.IndexedDataRef.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional DataRef data_ref = 2;
 * @return {?proto.api_spec.DataRef}
 */
proto.api_spec.IndexedDataRef.prototype.getDataRef = function() {
  return /** @type{?proto.api_spec.DataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataRef, 2));
};


/**
 * @param {?proto.api_spec.DataRef|undefined} value
 * @return {!proto.api_spec.IndexedDataRef} returns this
*/
proto.api_spec.IndexedDataRef.prototype.setDataRef = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.IndexedDataRef} returns this
 */
proto.api_spec.IndexedDataRef.prototype.clearDataRef = function() {
  return this.setDataRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.IndexedDataRef.prototype.hasDataRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.ListRef.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.ListRef.RefCase = {
  REF_NOT_SET: 0,
  FULL_LIST: 1,
  ELEM_REF: 2
};

/**
 * @return {proto.api_spec.ListRef.RefCase}
 */
proto.api_spec.ListRef.prototype.getRefCase = function() {
  return /** @type {proto.api_spec.ListRef.RefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.ListRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullList: (f = msg.getFullList()) && proto.api_spec.ListRef.FullListRef.toObject(includeInstance, f),
    elemRef: (f = msg.getElemRef()) && proto.api_spec.IndexedDataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListRef}
 */
proto.api_spec.ListRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListRef;
  return proto.api_spec.ListRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListRef}
 */
proto.api_spec.ListRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.ListRef.FullListRef;
      reader.readMessage(value,proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader);
      msg.setFullList(value);
      break;
    case 2:
      var value = new proto.api_spec.IndexedDataRef;
      reader.readMessage(value,proto.api_spec.IndexedDataRef.deserializeBinaryFromReader);
      msg.setElemRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter
    );
  }
  f = message.getElemRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.IndexedDataRef.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.ListRef.FullListRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.ListRef.FullListRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.ListRef.FullListRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.FullListRef.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.FullListRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.ListRef.FullListRef;
  return proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.ListRef.FullListRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.FullListRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.ListRef.FullListRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.ListRef.FullListRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.ListRef.FullListRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FullListRef full_list = 1;
 * @return {?proto.api_spec.ListRef.FullListRef}
 */
proto.api_spec.ListRef.prototype.getFullList = function() {
  return /** @type{?proto.api_spec.ListRef.FullListRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.ListRef.FullListRef, 1));
};


/**
 * @param {?proto.api_spec.ListRef.FullListRef|undefined} value
 * @return {!proto.api_spec.ListRef} returns this
*/
proto.api_spec.ListRef.prototype.setFullList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.ListRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.ListRef} returns this
 */
proto.api_spec.ListRef.prototype.clearFullList = function() {
  return this.setFullList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.ListRef.prototype.hasFullList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IndexedDataRef elem_ref = 2;
 * @return {?proto.api_spec.IndexedDataRef}
 */
proto.api_spec.ListRef.prototype.getElemRef = function() {
  return /** @type{?proto.api_spec.IndexedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.IndexedDataRef, 2));
};


/**
 * @param {?proto.api_spec.IndexedDataRef|undefined} value
 * @return {!proto.api_spec.ListRef} returns this
*/
proto.api_spec.ListRef.prototype.setElemRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.ListRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.ListRef} returns this
 */
proto.api_spec.ListRef.prototype.clearElemRef = function() {
  return this.setElemRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.ListRef.prototype.hasElemRef = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.NamedDataRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.NamedDataRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.NamedDataRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.NamedDataRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataRef: (f = msg.getDataRef()) && proto.api_spec.DataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.NamedDataRef}
 */
proto.api_spec.NamedDataRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.NamedDataRef;
  return proto.api_spec.NamedDataRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.NamedDataRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.NamedDataRef}
 */
proto.api_spec.NamedDataRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.api_spec.DataRef;
      reader.readMessage(value,proto.api_spec.DataRef.deserializeBinaryFromReader);
      msg.setDataRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.NamedDataRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.NamedDataRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.NamedDataRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.NamedDataRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.DataRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api_spec.NamedDataRef.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_spec.NamedDataRef} returns this
 */
proto.api_spec.NamedDataRef.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DataRef data_ref = 2;
 * @return {?proto.api_spec.DataRef}
 */
proto.api_spec.NamedDataRef.prototype.getDataRef = function() {
  return /** @type{?proto.api_spec.DataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.DataRef, 2));
};


/**
 * @param {?proto.api_spec.DataRef|undefined} value
 * @return {!proto.api_spec.NamedDataRef} returns this
*/
proto.api_spec.NamedDataRef.prototype.setDataRef = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.NamedDataRef} returns this
 */
proto.api_spec.NamedDataRef.prototype.clearDataRef = function() {
  return this.setDataRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.NamedDataRef.prototype.hasDataRef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_spec.StructRef.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_spec.StructRef.RefCase = {
  REF_NOT_SET: 0,
  FULL_STRUCT: 1,
  FIELD_REF: 2
};

/**
 * @return {proto.api_spec.StructRef.RefCase}
 */
proto.api_spec.StructRef.prototype.getRefCase = function() {
  return /** @type {proto.api_spec.StructRef.RefCase} */(jspb.Message.computeOneofCase(this, proto.api_spec.StructRef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullStruct: (f = msg.getFullStruct()) && proto.api_spec.StructRef.FullStructRef.toObject(includeInstance, f),
    fieldRef: (f = msg.getFieldRef()) && proto.api_spec.NamedDataRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructRef}
 */
proto.api_spec.StructRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructRef;
  return proto.api_spec.StructRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructRef}
 */
proto.api_spec.StructRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_spec.StructRef.FullStructRef;
      reader.readMessage(value,proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader);
      msg.setFullStruct(value);
      break;
    case 2:
      var value = new proto.api_spec.NamedDataRef;
      reader.readMessage(value,proto.api_spec.NamedDataRef.deserializeBinaryFromReader);
      msg.setFieldRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullStruct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter
    );
  }
  f = message.getFieldRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_spec.NamedDataRef.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_spec.StructRef.FullStructRef.prototype.toObject = function(opt_includeInstance) {
  return proto.api_spec.StructRef.FullStructRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_spec.StructRef.FullStructRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.FullStructRef.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.FullStructRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_spec.StructRef.FullStructRef;
  return proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_spec.StructRef.FullStructRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.FullStructRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_spec.StructRef.FullStructRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_spec.StructRef.FullStructRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_spec.StructRef.FullStructRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FullStructRef full_struct = 1;
 * @return {?proto.api_spec.StructRef.FullStructRef}
 */
proto.api_spec.StructRef.prototype.getFullStruct = function() {
  return /** @type{?proto.api_spec.StructRef.FullStructRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.StructRef.FullStructRef, 1));
};


/**
 * @param {?proto.api_spec.StructRef.FullStructRef|undefined} value
 * @return {!proto.api_spec.StructRef} returns this
*/
proto.api_spec.StructRef.prototype.setFullStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api_spec.StructRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.StructRef} returns this
 */
proto.api_spec.StructRef.prototype.clearFullStruct = function() {
  return this.setFullStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.StructRef.prototype.hasFullStruct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NamedDataRef field_ref = 2;
 * @return {?proto.api_spec.NamedDataRef}
 */
proto.api_spec.StructRef.prototype.getFieldRef = function() {
  return /** @type{?proto.api_spec.NamedDataRef} */ (
    jspb.Message.getWrapperField(this, proto.api_spec.NamedDataRef, 2));
};


/**
 * @param {?proto.api_spec.NamedDataRef|undefined} value
 * @return {!proto.api_spec.StructRef} returns this
*/
proto.api_spec.StructRef.prototype.setFieldRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api_spec.StructRef.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api_spec.StructRef} returns this
 */
proto.api_spec.StructRef.prototype.clearFieldRef = function() {
  return this.setFieldRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_spec.StructRef.prototype.hasFieldRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


