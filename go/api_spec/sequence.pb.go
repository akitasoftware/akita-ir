// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sequence.proto

package api_spec

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NamedDataRef struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DataRef              *DataRef `protobuf:"bytes,2,opt,name=data_ref,json=dataRef,proto3" json:"data_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamedDataRef) Reset()         { *m = NamedDataRef{} }
func (m *NamedDataRef) String() string { return proto.CompactTextString(m) }
func (*NamedDataRef) ProtoMessage()    {}
func (*NamedDataRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{0}
}

func (m *NamedDataRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedDataRef.Unmarshal(m, b)
}
func (m *NamedDataRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedDataRef.Marshal(b, m, deterministic)
}
func (m *NamedDataRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedDataRef.Merge(m, src)
}
func (m *NamedDataRef) XXX_Size() int {
	return xxx_messageInfo_NamedDataRef.Size(m)
}
func (m *NamedDataRef) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedDataRef.DiscardUnknown(m)
}

var xxx_messageInfo_NamedDataRef proto.InternalMessageInfo

func (m *NamedDataRef) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NamedDataRef) GetDataRef() *DataRef {
	if m != nil {
		return m.DataRef
	}
	return nil
}

type IndexedDataRef struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	DataRef              *DataRef `protobuf:"bytes,2,opt,name=data_ref,json=dataRef,proto3" json:"data_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexedDataRef) Reset()         { *m = IndexedDataRef{} }
func (m *IndexedDataRef) String() string { return proto.CompactTextString(m) }
func (*IndexedDataRef) ProtoMessage()    {}
func (*IndexedDataRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{1}
}

func (m *IndexedDataRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexedDataRef.Unmarshal(m, b)
}
func (m *IndexedDataRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexedDataRef.Marshal(b, m, deterministic)
}
func (m *IndexedDataRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexedDataRef.Merge(m, src)
}
func (m *IndexedDataRef) XXX_Size() int {
	return xxx_messageInfo_IndexedDataRef.Size(m)
}
func (m *IndexedDataRef) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexedDataRef.DiscardUnknown(m)
}

var xxx_messageInfo_IndexedDataRef proto.InternalMessageInfo

func (m *IndexedDataRef) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *IndexedDataRef) GetDataRef() *DataRef {
	if m != nil {
		return m.DataRef
	}
	return nil
}

type PrimitiveRef struct {
	// Types that are valid to be assigned to Type:
	//	*PrimitiveRef_BoolType
	//	*PrimitiveRef_BytesType
	//	*PrimitiveRef_StringType
	//	*PrimitiveRef_Int32Type
	//	*PrimitiveRef_Int64Type
	//	*PrimitiveRef_Uint32Type
	//	*PrimitiveRef_Uint64Type
	//	*PrimitiveRef_DoubleType
	//	*PrimitiveRef_FloatType
	Type                 isPrimitiveRef_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PrimitiveRef) Reset()         { *m = PrimitiveRef{} }
func (m *PrimitiveRef) String() string { return proto.CompactTextString(m) }
func (*PrimitiveRef) ProtoMessage()    {}
func (*PrimitiveRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{2}
}

func (m *PrimitiveRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimitiveRef.Unmarshal(m, b)
}
func (m *PrimitiveRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimitiveRef.Marshal(b, m, deterministic)
}
func (m *PrimitiveRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimitiveRef.Merge(m, src)
}
func (m *PrimitiveRef) XXX_Size() int {
	return xxx_messageInfo_PrimitiveRef.Size(m)
}
func (m *PrimitiveRef) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimitiveRef.DiscardUnknown(m)
}

var xxx_messageInfo_PrimitiveRef proto.InternalMessageInfo

type isPrimitiveRef_Type interface {
	isPrimitiveRef_Type()
}

type PrimitiveRef_BoolType struct {
	BoolType *BoolType `protobuf:"bytes,1,opt,name=bool_type,json=boolType,proto3,oneof"`
}

type PrimitiveRef_BytesType struct {
	BytesType *BytesType `protobuf:"bytes,2,opt,name=bytes_type,json=bytesType,proto3,oneof"`
}

type PrimitiveRef_StringType struct {
	StringType *StringType `protobuf:"bytes,3,opt,name=string_type,json=stringType,proto3,oneof"`
}

type PrimitiveRef_Int32Type struct {
	Int32Type *Int32Type `protobuf:"bytes,4,opt,name=int32_type,json=int32Type,proto3,oneof"`
}

type PrimitiveRef_Int64Type struct {
	Int64Type *Int64Type `protobuf:"bytes,5,opt,name=int64_type,json=int64Type,proto3,oneof"`
}

type PrimitiveRef_Uint32Type struct {
	Uint32Type *Uint32Type `protobuf:"bytes,6,opt,name=uint32_type,json=uint32Type,proto3,oneof"`
}

type PrimitiveRef_Uint64Type struct {
	Uint64Type *Uint64Type `protobuf:"bytes,7,opt,name=uint64_type,json=uint64Type,proto3,oneof"`
}

type PrimitiveRef_DoubleType struct {
	DoubleType *DoubleType `protobuf:"bytes,8,opt,name=double_type,json=doubleType,proto3,oneof"`
}

type PrimitiveRef_FloatType struct {
	FloatType *FloatType `protobuf:"bytes,9,opt,name=float_type,json=floatType,proto3,oneof"`
}

func (*PrimitiveRef_BoolType) isPrimitiveRef_Type() {}

func (*PrimitiveRef_BytesType) isPrimitiveRef_Type() {}

func (*PrimitiveRef_StringType) isPrimitiveRef_Type() {}

func (*PrimitiveRef_Int32Type) isPrimitiveRef_Type() {}

func (*PrimitiveRef_Int64Type) isPrimitiveRef_Type() {}

func (*PrimitiveRef_Uint32Type) isPrimitiveRef_Type() {}

func (*PrimitiveRef_Uint64Type) isPrimitiveRef_Type() {}

func (*PrimitiveRef_DoubleType) isPrimitiveRef_Type() {}

func (*PrimitiveRef_FloatType) isPrimitiveRef_Type() {}

func (m *PrimitiveRef) GetType() isPrimitiveRef_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PrimitiveRef) GetBoolType() *BoolType {
	if x, ok := m.GetType().(*PrimitiveRef_BoolType); ok {
		return x.BoolType
	}
	return nil
}

func (m *PrimitiveRef) GetBytesType() *BytesType {
	if x, ok := m.GetType().(*PrimitiveRef_BytesType); ok {
		return x.BytesType
	}
	return nil
}

func (m *PrimitiveRef) GetStringType() *StringType {
	if x, ok := m.GetType().(*PrimitiveRef_StringType); ok {
		return x.StringType
	}
	return nil
}

func (m *PrimitiveRef) GetInt32Type() *Int32Type {
	if x, ok := m.GetType().(*PrimitiveRef_Int32Type); ok {
		return x.Int32Type
	}
	return nil
}

func (m *PrimitiveRef) GetInt64Type() *Int64Type {
	if x, ok := m.GetType().(*PrimitiveRef_Int64Type); ok {
		return x.Int64Type
	}
	return nil
}

func (m *PrimitiveRef) GetUint32Type() *Uint32Type {
	if x, ok := m.GetType().(*PrimitiveRef_Uint32Type); ok {
		return x.Uint32Type
	}
	return nil
}

func (m *PrimitiveRef) GetUint64Type() *Uint64Type {
	if x, ok := m.GetType().(*PrimitiveRef_Uint64Type); ok {
		return x.Uint64Type
	}
	return nil
}

func (m *PrimitiveRef) GetDoubleType() *DoubleType {
	if x, ok := m.GetType().(*PrimitiveRef_DoubleType); ok {
		return x.DoubleType
	}
	return nil
}

func (m *PrimitiveRef) GetFloatType() *FloatType {
	if x, ok := m.GetType().(*PrimitiveRef_FloatType); ok {
		return x.FloatType
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PrimitiveRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PrimitiveRef_BoolType)(nil),
		(*PrimitiveRef_BytesType)(nil),
		(*PrimitiveRef_StringType)(nil),
		(*PrimitiveRef_Int32Type)(nil),
		(*PrimitiveRef_Int64Type)(nil),
		(*PrimitiveRef_Uint32Type)(nil),
		(*PrimitiveRef_Uint64Type)(nil),
		(*PrimitiveRef_DoubleType)(nil),
		(*PrimitiveRef_FloatType)(nil),
	}
}

type StructRef struct {
	// Types that are valid to be assigned to Ref:
	//	*StructRef_FullStruct
	//	*StructRef_FieldRef
	Ref                  isStructRef_Ref `protobuf_oneof:"ref"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StructRef) Reset()         { *m = StructRef{} }
func (m *StructRef) String() string { return proto.CompactTextString(m) }
func (*StructRef) ProtoMessage()    {}
func (*StructRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{3}
}

func (m *StructRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructRef.Unmarshal(m, b)
}
func (m *StructRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructRef.Marshal(b, m, deterministic)
}
func (m *StructRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructRef.Merge(m, src)
}
func (m *StructRef) XXX_Size() int {
	return xxx_messageInfo_StructRef.Size(m)
}
func (m *StructRef) XXX_DiscardUnknown() {
	xxx_messageInfo_StructRef.DiscardUnknown(m)
}

var xxx_messageInfo_StructRef proto.InternalMessageInfo

type isStructRef_Ref interface {
	isStructRef_Ref()
}

type StructRef_FullStruct struct {
	FullStruct *StructRef_FullStructRef `protobuf:"bytes,1,opt,name=full_struct,json=fullStruct,proto3,oneof"`
}

type StructRef_FieldRef struct {
	FieldRef *NamedDataRef `protobuf:"bytes,2,opt,name=field_ref,json=fieldRef,proto3,oneof"`
}

func (*StructRef_FullStruct) isStructRef_Ref() {}

func (*StructRef_FieldRef) isStructRef_Ref() {}

func (m *StructRef) GetRef() isStructRef_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *StructRef) GetFullStruct() *StructRef_FullStructRef {
	if x, ok := m.GetRef().(*StructRef_FullStruct); ok {
		return x.FullStruct
	}
	return nil
}

func (m *StructRef) GetFieldRef() *NamedDataRef {
	if x, ok := m.GetRef().(*StructRef_FieldRef); ok {
		return x.FieldRef
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StructRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StructRef_FullStruct)(nil),
		(*StructRef_FieldRef)(nil),
	}
}

// Reference the entire struct.
type StructRef_FullStructRef struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructRef_FullStructRef) Reset()         { *m = StructRef_FullStructRef{} }
func (m *StructRef_FullStructRef) String() string { return proto.CompactTextString(m) }
func (*StructRef_FullStructRef) ProtoMessage()    {}
func (*StructRef_FullStructRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{3, 0}
}

func (m *StructRef_FullStructRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructRef_FullStructRef.Unmarshal(m, b)
}
func (m *StructRef_FullStructRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructRef_FullStructRef.Marshal(b, m, deterministic)
}
func (m *StructRef_FullStructRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructRef_FullStructRef.Merge(m, src)
}
func (m *StructRef_FullStructRef) XXX_Size() int {
	return xxx_messageInfo_StructRef_FullStructRef.Size(m)
}
func (m *StructRef_FullStructRef) XXX_DiscardUnknown() {
	xxx_messageInfo_StructRef_FullStructRef.DiscardUnknown(m)
}

var xxx_messageInfo_StructRef_FullStructRef proto.InternalMessageInfo

type ListRef struct {
	// Types that are valid to be assigned to Ref:
	//	*ListRef_FullList
	//	*ListRef_ElemRef
	Ref                  isListRef_Ref `protobuf_oneof:"ref"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListRef) Reset()         { *m = ListRef{} }
func (m *ListRef) String() string { return proto.CompactTextString(m) }
func (*ListRef) ProtoMessage()    {}
func (*ListRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{4}
}

func (m *ListRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRef.Unmarshal(m, b)
}
func (m *ListRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRef.Marshal(b, m, deterministic)
}
func (m *ListRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRef.Merge(m, src)
}
func (m *ListRef) XXX_Size() int {
	return xxx_messageInfo_ListRef.Size(m)
}
func (m *ListRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRef.DiscardUnknown(m)
}

var xxx_messageInfo_ListRef proto.InternalMessageInfo

type isListRef_Ref interface {
	isListRef_Ref()
}

type ListRef_FullList struct {
	FullList *ListRef_FullListRef `protobuf:"bytes,1,opt,name=full_list,json=fullList,proto3,oneof"`
}

type ListRef_ElemRef struct {
	ElemRef *IndexedDataRef `protobuf:"bytes,2,opt,name=elem_ref,json=elemRef,proto3,oneof"`
}

func (*ListRef_FullList) isListRef_Ref() {}

func (*ListRef_ElemRef) isListRef_Ref() {}

func (m *ListRef) GetRef() isListRef_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *ListRef) GetFullList() *ListRef_FullListRef {
	if x, ok := m.GetRef().(*ListRef_FullList); ok {
		return x.FullList
	}
	return nil
}

func (m *ListRef) GetElemRef() *IndexedDataRef {
	if x, ok := m.GetRef().(*ListRef_ElemRef); ok {
		return x.ElemRef
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListRef_FullList)(nil),
		(*ListRef_ElemRef)(nil),
	}
}

// Reference the entire list.
type ListRef_FullListRef struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRef_FullListRef) Reset()         { *m = ListRef_FullListRef{} }
func (m *ListRef_FullListRef) String() string { return proto.CompactTextString(m) }
func (*ListRef_FullListRef) ProtoMessage()    {}
func (*ListRef_FullListRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{4, 0}
}

func (m *ListRef_FullListRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRef_FullListRef.Unmarshal(m, b)
}
func (m *ListRef_FullListRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRef_FullListRef.Marshal(b, m, deterministic)
}
func (m *ListRef_FullListRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRef_FullListRef.Merge(m, src)
}
func (m *ListRef_FullListRef) XXX_Size() int {
	return xxx_messageInfo_ListRef_FullListRef.Size(m)
}
func (m *ListRef_FullListRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRef_FullListRef.DiscardUnknown(m)
}

var xxx_messageInfo_ListRef_FullListRef proto.InternalMessageInfo

// DataRef is a reference or "pointer" to a particular Data object within a
// parent Data object.
type DataRef struct {
	// Types that are valid to be assigned to ValueRef:
	//	*DataRef_PrimitiveRef
	//	*DataRef_StructRef
	//	*DataRef_ListRef
	ValueRef             isDataRef_ValueRef `protobuf_oneof:"value_ref"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DataRef) Reset()         { *m = DataRef{} }
func (m *DataRef) String() string { return proto.CompactTextString(m) }
func (*DataRef) ProtoMessage()    {}
func (*DataRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{5}
}

func (m *DataRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRef.Unmarshal(m, b)
}
func (m *DataRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRef.Marshal(b, m, deterministic)
}
func (m *DataRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRef.Merge(m, src)
}
func (m *DataRef) XXX_Size() int {
	return xxx_messageInfo_DataRef.Size(m)
}
func (m *DataRef) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRef.DiscardUnknown(m)
}

var xxx_messageInfo_DataRef proto.InternalMessageInfo

type isDataRef_ValueRef interface {
	isDataRef_ValueRef()
}

type DataRef_PrimitiveRef struct {
	PrimitiveRef *PrimitiveRef `protobuf:"bytes,1,opt,name=primitive_ref,json=primitiveRef,proto3,oneof"`
}

type DataRef_StructRef struct {
	StructRef *StructRef `protobuf:"bytes,2,opt,name=struct_ref,json=structRef,proto3,oneof"`
}

type DataRef_ListRef struct {
	ListRef *ListRef `protobuf:"bytes,3,opt,name=list_ref,json=listRef,proto3,oneof"`
}

func (*DataRef_PrimitiveRef) isDataRef_ValueRef() {}

func (*DataRef_StructRef) isDataRef_ValueRef() {}

func (*DataRef_ListRef) isDataRef_ValueRef() {}

func (m *DataRef) GetValueRef() isDataRef_ValueRef {
	if m != nil {
		return m.ValueRef
	}
	return nil
}

func (m *DataRef) GetPrimitiveRef() *PrimitiveRef {
	if x, ok := m.GetValueRef().(*DataRef_PrimitiveRef); ok {
		return x.PrimitiveRef
	}
	return nil
}

func (m *DataRef) GetStructRef() *StructRef {
	if x, ok := m.GetValueRef().(*DataRef_StructRef); ok {
		return x.StructRef
	}
	return nil
}

func (m *DataRef) GetListRef() *ListRef {
	if x, ok := m.GetValueRef().(*DataRef_ListRef); ok {
		return x.ListRef
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataRef_PrimitiveRef)(nil),
		(*DataRef_StructRef)(nil),
		(*DataRef_ListRef)(nil),
	}
}

// MethodDataRef describes a reference to a value within a Method in the
// sequence.
type MethodDataRef struct {
	// Index of the method in the sequence.
	MethodIndex int32 `protobuf:"varint,1,opt,name=method_index,json=methodIndex,proto3" json:"method_index,omitempty"`
	// Types that are valid to be assigned to Ref:
	//	*MethodDataRef_ArgRef
	//	*MethodDataRef_ResponseRef
	Ref isMethodDataRef_Ref `protobuf_oneof:"ref"`
	// This should come from the Data protobuf making the reference, not the Data
	// protobuf being referenced. Because of this, it is easier for the sequence
	// generator to add this to MethodDataRef, instead of PrimitiveRef, even
	// though this should only exist for references to primitive data types.
	AkitaAnnotations     *AkitaAnnotations `protobuf:"bytes,11,opt,name=akita_annotations,json=akitaAnnotations,proto3" json:"akita_annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MethodDataRef) Reset()         { *m = MethodDataRef{} }
func (m *MethodDataRef) String() string { return proto.CompactTextString(m) }
func (*MethodDataRef) ProtoMessage()    {}
func (*MethodDataRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{6}
}

func (m *MethodDataRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodDataRef.Unmarshal(m, b)
}
func (m *MethodDataRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodDataRef.Marshal(b, m, deterministic)
}
func (m *MethodDataRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodDataRef.Merge(m, src)
}
func (m *MethodDataRef) XXX_Size() int {
	return xxx_messageInfo_MethodDataRef.Size(m)
}
func (m *MethodDataRef) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodDataRef.DiscardUnknown(m)
}

var xxx_messageInfo_MethodDataRef proto.InternalMessageInfo

func (m *MethodDataRef) GetMethodIndex() int32 {
	if m != nil {
		return m.MethodIndex
	}
	return 0
}

type isMethodDataRef_Ref interface {
	isMethodDataRef_Ref()
}

type MethodDataRef_ArgRef struct {
	ArgRef *NamedDataRef `protobuf:"bytes,2,opt,name=arg_ref,json=argRef,proto3,oneof"`
}

type MethodDataRef_ResponseRef struct {
	ResponseRef *NamedDataRef `protobuf:"bytes,3,opt,name=response_ref,json=responseRef,proto3,oneof"`
}

func (*MethodDataRef_ArgRef) isMethodDataRef_Ref() {}

func (*MethodDataRef_ResponseRef) isMethodDataRef_Ref() {}

func (m *MethodDataRef) GetRef() isMethodDataRef_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *MethodDataRef) GetArgRef() *NamedDataRef {
	if x, ok := m.GetRef().(*MethodDataRef_ArgRef); ok {
		return x.ArgRef
	}
	return nil
}

func (m *MethodDataRef) GetResponseRef() *NamedDataRef {
	if x, ok := m.GetRef().(*MethodDataRef_ResponseRef); ok {
		return x.ResponseRef
	}
	return nil
}

func (m *MethodDataRef) GetAkitaAnnotations() *AkitaAnnotations {
	if m != nil {
		return m.AkitaAnnotations
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MethodDataRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MethodDataRef_ArgRef)(nil),
		(*MethodDataRef_ResponseRef)(nil),
	}
}

type StructTemplate struct {
	FieldTemplates       map[string]*DataTemplate `protobuf:"bytes,1,rep,name=field_templates,json=fieldTemplates,proto3" json:"field_templates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StructTemplate) Reset()         { *m = StructTemplate{} }
func (m *StructTemplate) String() string { return proto.CompactTextString(m) }
func (*StructTemplate) ProtoMessage()    {}
func (*StructTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{7}
}

func (m *StructTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructTemplate.Unmarshal(m, b)
}
func (m *StructTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructTemplate.Marshal(b, m, deterministic)
}
func (m *StructTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructTemplate.Merge(m, src)
}
func (m *StructTemplate) XXX_Size() int {
	return xxx_messageInfo_StructTemplate.Size(m)
}
func (m *StructTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_StructTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_StructTemplate proto.InternalMessageInfo

func (m *StructTemplate) GetFieldTemplates() map[string]*DataTemplate {
	if m != nil {
		return m.FieldTemplates
	}
	return nil
}

type ListTemplate struct {
	ElemTemplates        []*DataTemplate `protobuf:"bytes,1,rep,name=elem_templates,json=elemTemplates,proto3" json:"elem_templates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListTemplate) Reset()         { *m = ListTemplate{} }
func (m *ListTemplate) String() string { return proto.CompactTextString(m) }
func (*ListTemplate) ProtoMessage()    {}
func (*ListTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{8}
}

func (m *ListTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTemplate.Unmarshal(m, b)
}
func (m *ListTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTemplate.Marshal(b, m, deterministic)
}
func (m *ListTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTemplate.Merge(m, src)
}
func (m *ListTemplate) XXX_Size() int {
	return xxx_messageInfo_ListTemplate.Size(m)
}
func (m *ListTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_ListTemplate proto.InternalMessageInfo

func (m *ListTemplate) GetElemTemplates() []*DataTemplate {
	if m != nil {
		return m.ElemTemplates
	}
	return nil
}

type OptionalTemplate struct {
	ValueTemplate        *DataTemplate `protobuf:"bytes,1,opt,name=value_template,json=valueTemplate,proto3" json:"value_template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OptionalTemplate) Reset()         { *m = OptionalTemplate{} }
func (m *OptionalTemplate) String() string { return proto.CompactTextString(m) }
func (*OptionalTemplate) ProtoMessage()    {}
func (*OptionalTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{9}
}

func (m *OptionalTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionalTemplate.Unmarshal(m, b)
}
func (m *OptionalTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionalTemplate.Marshal(b, m, deterministic)
}
func (m *OptionalTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionalTemplate.Merge(m, src)
}
func (m *OptionalTemplate) XXX_Size() int {
	return xxx_messageInfo_OptionalTemplate.Size(m)
}
func (m *OptionalTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionalTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_OptionalTemplate proto.InternalMessageInfo

func (m *OptionalTemplate) GetValueTemplate() *DataTemplate {
	if m != nil {
		return m.ValueTemplate
	}
	return nil
}

// DataTemplate describes how to construct a Data object. It recursively encodes
// the structure of the desired Data object while embedding values or references
// to values that is needed to fill out the Data object.
type DataTemplate struct {
	// Types that are valid to be assigned to ValueTemplate:
	//	*DataTemplate_StructTemplate
	//	*DataTemplate_ListTemplate
	//	*DataTemplate_Value
	//	*DataTemplate_Ref
	//	*DataTemplate_OptionalTemplate
	ValueTemplate        isDataTemplate_ValueTemplate `protobuf_oneof:"value_template"`
	Meta                 *DataMeta                    `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DataTemplate) Reset()         { *m = DataTemplate{} }
func (m *DataTemplate) String() string { return proto.CompactTextString(m) }
func (*DataTemplate) ProtoMessage()    {}
func (*DataTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{10}
}

func (m *DataTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTemplate.Unmarshal(m, b)
}
func (m *DataTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTemplate.Marshal(b, m, deterministic)
}
func (m *DataTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTemplate.Merge(m, src)
}
func (m *DataTemplate) XXX_Size() int {
	return xxx_messageInfo_DataTemplate.Size(m)
}
func (m *DataTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_DataTemplate proto.InternalMessageInfo

type isDataTemplate_ValueTemplate interface {
	isDataTemplate_ValueTemplate()
}

type DataTemplate_StructTemplate struct {
	StructTemplate *StructTemplate `protobuf:"bytes,1,opt,name=struct_template,json=structTemplate,proto3,oneof"`
}

type DataTemplate_ListTemplate struct {
	ListTemplate *ListTemplate `protobuf:"bytes,2,opt,name=list_template,json=listTemplate,proto3,oneof"`
}

type DataTemplate_Value struct {
	Value *Data `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type DataTemplate_Ref struct {
	Ref *MethodDataRef `protobuf:"bytes,4,opt,name=ref,proto3,oneof"`
}

type DataTemplate_OptionalTemplate struct {
	OptionalTemplate *OptionalTemplate `protobuf:"bytes,5,opt,name=optional_template,json=optionalTemplate,proto3,oneof"`
}

func (*DataTemplate_StructTemplate) isDataTemplate_ValueTemplate() {}

func (*DataTemplate_ListTemplate) isDataTemplate_ValueTemplate() {}

func (*DataTemplate_Value) isDataTemplate_ValueTemplate() {}

func (*DataTemplate_Ref) isDataTemplate_ValueTemplate() {}

func (*DataTemplate_OptionalTemplate) isDataTemplate_ValueTemplate() {}

func (m *DataTemplate) GetValueTemplate() isDataTemplate_ValueTemplate {
	if m != nil {
		return m.ValueTemplate
	}
	return nil
}

func (m *DataTemplate) GetStructTemplate() *StructTemplate {
	if x, ok := m.GetValueTemplate().(*DataTemplate_StructTemplate); ok {
		return x.StructTemplate
	}
	return nil
}

func (m *DataTemplate) GetListTemplate() *ListTemplate {
	if x, ok := m.GetValueTemplate().(*DataTemplate_ListTemplate); ok {
		return x.ListTemplate
	}
	return nil
}

func (m *DataTemplate) GetValue() *Data {
	if x, ok := m.GetValueTemplate().(*DataTemplate_Value); ok {
		return x.Value
	}
	return nil
}

func (m *DataTemplate) GetRef() *MethodDataRef {
	if x, ok := m.GetValueTemplate().(*DataTemplate_Ref); ok {
		return x.Ref
	}
	return nil
}

func (m *DataTemplate) GetOptionalTemplate() *OptionalTemplate {
	if x, ok := m.GetValueTemplate().(*DataTemplate_OptionalTemplate); ok {
		return x.OptionalTemplate
	}
	return nil
}

func (m *DataTemplate) GetMeta() *DataMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataTemplate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataTemplate_StructTemplate)(nil),
		(*DataTemplate_ListTemplate)(nil),
		(*DataTemplate_Value)(nil),
		(*DataTemplate_Ref)(nil),
		(*DataTemplate_OptionalTemplate)(nil),
	}
}

// MethodTemplate describes how a method should be invoked.
type MethodTemplate struct {
	// Unique identifier for this MethodTemplate.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the Method that this template represents.
	MethodId *MethodID `protobuf:"bytes,2,opt,name=method_id,json=methodId,proto3" json:"method_id,omitempty"`
	// Templates for the arguments.
	ArgTemplates map[string]*DataTemplate `protobuf:"bytes,3,rep,name=arg_templates,json=argTemplates,proto3" json:"arg_templates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Describes the types expected in the method's response. This is needed in
	// order to parse actual API call response back into the generic format and
	// lives here mostly for plumbing reasons.
	Responses            map[string]*Data `protobuf:"bytes,4,rep,name=responses,proto3" json:"responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Meta                 *MethodMeta      `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MethodTemplate) Reset()         { *m = MethodTemplate{} }
func (m *MethodTemplate) String() string { return proto.CompactTextString(m) }
func (*MethodTemplate) ProtoMessage()    {}
func (*MethodTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{11}
}

func (m *MethodTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodTemplate.Unmarshal(m, b)
}
func (m *MethodTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodTemplate.Marshal(b, m, deterministic)
}
func (m *MethodTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodTemplate.Merge(m, src)
}
func (m *MethodTemplate) XXX_Size() int {
	return xxx_messageInfo_MethodTemplate.Size(m)
}
func (m *MethodTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_MethodTemplate proto.InternalMessageInfo

func (m *MethodTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MethodTemplate) GetMethodId() *MethodID {
	if m != nil {
		return m.MethodId
	}
	return nil
}

func (m *MethodTemplate) GetArgTemplates() map[string]*DataTemplate {
	if m != nil {
		return m.ArgTemplates
	}
	return nil
}

func (m *MethodTemplate) GetResponses() map[string]*Data {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *MethodTemplate) GetMeta() *MethodMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Sequence struct {
	// Sequence ID is computed as sha256("".join(t.id for t in method_templates)).
	// By generating sequence ID deterministically, we can easily compute the
	// sequnce ID of the prefix of a given sequence.
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MethodTemplates      []*MethodTemplate `protobuf:"bytes,2,rep,name=method_templates,json=methodTemplates,proto3" json:"method_templates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Sequence) Reset()         { *m = Sequence{} }
func (m *Sequence) String() string { return proto.CompactTextString(m) }
func (*Sequence) ProtoMessage()    {}
func (*Sequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{12}
}

func (m *Sequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence.Unmarshal(m, b)
}
func (m *Sequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence.Marshal(b, m, deterministic)
}
func (m *Sequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence.Merge(m, src)
}
func (m *Sequence) XXX_Size() int {
	return xxx_messageInfo_Sequence.Size(m)
}
func (m *Sequence) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence proto.InternalMessageInfo

func (m *Sequence) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sequence) GetMethodTemplates() []*MethodTemplate {
	if m != nil {
		return m.MethodTemplates
	}
	return nil
}

type SequenceRun struct {
	Seq *Sequence `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// Indicates that this is the ith attempt to rerun the sequence. 0 means this
	// is not a rerun (i.e. the initial run).
	RerunAttempt         int32    `protobuf:"varint,2,opt,name=rerun_attempt,json=rerunAttempt,proto3" json:"rerun_attempt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SequenceRun) Reset()         { *m = SequenceRun{} }
func (m *SequenceRun) String() string { return proto.CompactTextString(m) }
func (*SequenceRun) ProtoMessage()    {}
func (*SequenceRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_e97b888ecada2421, []int{13}
}

func (m *SequenceRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SequenceRun.Unmarshal(m, b)
}
func (m *SequenceRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SequenceRun.Marshal(b, m, deterministic)
}
func (m *SequenceRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SequenceRun.Merge(m, src)
}
func (m *SequenceRun) XXX_Size() int {
	return xxx_messageInfo_SequenceRun.Size(m)
}
func (m *SequenceRun) XXX_DiscardUnknown() {
	xxx_messageInfo_SequenceRun.DiscardUnknown(m)
}

var xxx_messageInfo_SequenceRun proto.InternalMessageInfo

func (m *SequenceRun) GetSeq() *Sequence {
	if m != nil {
		return m.Seq
	}
	return nil
}

func (m *SequenceRun) GetRerunAttempt() int32 {
	if m != nil {
		return m.RerunAttempt
	}
	return 0
}

func init() {
	proto.RegisterType((*NamedDataRef)(nil), "api_spec.NamedDataRef")
	proto.RegisterType((*IndexedDataRef)(nil), "api_spec.IndexedDataRef")
	proto.RegisterType((*PrimitiveRef)(nil), "api_spec.PrimitiveRef")
	proto.RegisterType((*StructRef)(nil), "api_spec.StructRef")
	proto.RegisterType((*StructRef_FullStructRef)(nil), "api_spec.StructRef.FullStructRef")
	proto.RegisterType((*ListRef)(nil), "api_spec.ListRef")
	proto.RegisterType((*ListRef_FullListRef)(nil), "api_spec.ListRef.FullListRef")
	proto.RegisterType((*DataRef)(nil), "api_spec.DataRef")
	proto.RegisterType((*MethodDataRef)(nil), "api_spec.MethodDataRef")
	proto.RegisterType((*StructTemplate)(nil), "api_spec.StructTemplate")
	proto.RegisterMapType((map[string]*DataTemplate)(nil), "api_spec.StructTemplate.FieldTemplatesEntry")
	proto.RegisterType((*ListTemplate)(nil), "api_spec.ListTemplate")
	proto.RegisterType((*OptionalTemplate)(nil), "api_spec.OptionalTemplate")
	proto.RegisterType((*DataTemplate)(nil), "api_spec.DataTemplate")
	proto.RegisterType((*MethodTemplate)(nil), "api_spec.MethodTemplate")
	proto.RegisterMapType((map[string]*DataTemplate)(nil), "api_spec.MethodTemplate.ArgTemplatesEntry")
	proto.RegisterMapType((map[string]*Data)(nil), "api_spec.MethodTemplate.ResponsesEntry")
	proto.RegisterType((*Sequence)(nil), "api_spec.Sequence")
	proto.RegisterType((*SequenceRun)(nil), "api_spec.SequenceRun")
}

func init() { proto.RegisterFile("sequence.proto", fileDescriptor_e97b888ecada2421) }

var fileDescriptor_e97b888ecada2421 = []byte{
	// 1078 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0x46,
	0x13, 0x15, 0x25, 0xcb, 0x92, 0x86, 0x92, 0x2c, 0xaf, 0x83, 0xef, 0x13, 0x04, 0x14, 0x70, 0xd4,
	0x20, 0x35, 0x52, 0x43, 0x46, 0x1c, 0x27, 0x2d, 0xda, 0xfa, 0xc2, 0x8e, 0xe3, 0xca, 0x40, 0x9c,
	0xb4, 0x6b, 0x07, 0xfd, 0xb9, 0x11, 0x56, 0xe6, 0xd2, 0x25, 0x42, 0x91, 0x0c, 0x77, 0x99, 0xd6,
	0x0f, 0xd0, 0x37, 0xe8, 0x03, 0xf4, 0x39, 0xda, 0xbb, 0x3e, 0x4f, 0xaf, 0xfa, 0x04, 0xc5, 0xfe,
	0x91, 0x4b, 0x4a, 0x02, 0x5a, 0xa0, 0x77, 0x9c, 0xdd, 0x39, 0x67, 0x66, 0xce, 0xcc, 0x90, 0x84,
	0x3e, 0xa3, 0xef, 0x32, 0x1a, 0xdd, 0xd0, 0x49, 0x92, 0xc6, 0x3c, 0x46, 0x6d, 0x92, 0x04, 0x33,
	0x96, 0xd0, 0x9b, 0x51, 0x77, 0x41, 0xf9, 0x0f, 0xb1, 0xa7, 0xce, 0x47, 0x2e, 0xbf, 0x4b, 0x28,
	0x53, 0xc6, 0xf8, 0x15, 0x74, 0x5f, 0x91, 0x05, 0xf5, 0xce, 0x08, 0x27, 0x98, 0xfa, 0x68, 0x00,
	0x8d, 0xb7, 0xf4, 0x6e, 0xe8, 0xec, 0x3a, 0x7b, 0x1d, 0x2c, 0x1e, 0xd1, 0x3e, 0xb4, 0x3d, 0xc2,
	0xc9, 0x2c, 0xa5, 0xfe, 0xb0, 0xbe, 0xeb, 0xec, 0xb9, 0x87, 0xdb, 0x13, 0xc3, 0x3c, 0xd1, 0x30,
	0xdc, 0xf2, 0xd4, 0xc3, 0xf8, 0x1a, 0xfa, 0x17, 0x91, 0x47, 0x7f, 0x2a, 0x18, 0xef, 0x41, 0x33,
	0x10, 0x27, 0x92, 0xb3, 0x89, 0x95, 0xf1, 0x2f, 0x59, 0x7f, 0xde, 0x80, 0xee, 0x57, 0x69, 0xb0,
	0x08, 0x78, 0xf0, 0x9e, 0x0a, 0xd2, 0xc7, 0xd0, 0x99, 0xc7, 0x71, 0x38, 0x13, 0xa5, 0x48, 0x62,
	0xf7, 0x10, 0x15, 0xf8, 0xd3, 0x38, 0x0e, 0xaf, 0xef, 0x12, 0x3a, 0xad, 0xe1, 0xf6, 0x5c, 0x3f,
	0xa3, 0x23, 0x80, 0xf9, 0x1d, 0xa7, 0x4c, 0x61, 0x54, 0xcc, 0x1d, 0x0b, 0x23, 0xee, 0x34, 0xa8,
	0x33, 0x37, 0x06, 0xfa, 0x04, 0x5c, 0xc6, 0xd3, 0x20, 0xba, 0x55, 0xb0, 0x86, 0x84, 0xdd, 0x2b,
	0x60, 0x57, 0xf2, 0x52, 0xe3, 0x80, 0xe5, 0x96, 0x08, 0x17, 0x44, 0xfc, 0xc9, 0xa1, 0xc2, 0x6d,
	0x54, 0xc3, 0x5d, 0x88, 0x3b, 0x13, 0x2e, 0x30, 0x86, 0x46, 0x3d, 0x3b, 0x52, 0xa8, 0xe6, 0x0a,
	0xd4, 0xb3, 0x23, 0x0b, 0xa5, 0x0c, 0x91, 0x64, 0x66, 0x05, 0xdb, 0xac, 0x26, 0xf9, 0x26, 0xb0,
	0xa2, 0x41, 0x56, 0x84, 0xd3, 0x40, 0x13, 0xaf, 0xb5, 0x0a, 0x98, 0x07, 0x84, 0xac, 0x14, 0xd1,
	0x8b, 0xb3, 0x79, 0x48, 0x15, 0xb0, 0x5d, 0x05, 0x9e, 0xc9, 0x4b, 0x03, 0xf4, 0x72, 0x4b, 0x14,
	0xe8, 0x87, 0x31, 0xe1, 0x0a, 0xd7, 0xa9, 0x16, 0x78, 0x2e, 0xee, 0x4c, 0x81, 0xbe, 0x31, 0x4e,
	0x37, 0x61, 0x43, 0xf8, 0x8f, 0x7f, 0x75, 0xa0, 0x73, 0xc5, 0xd3, 0xec, 0x86, 0x8b, 0x21, 0x38,
	0x03, 0xd7, 0xcf, 0xc2, 0x70, 0xc6, 0xe4, 0x89, 0x1e, 0x83, 0xfb, 0xa5, 0xde, 0x28, 0xcf, 0xc9,
	0x79, 0x16, 0x86, 0xb9, 0x25, 0x32, 0xf2, 0xf3, 0x03, 0xf4, 0x14, 0x3a, 0x7e, 0x40, 0x43, 0xcf,
	0x1a, 0xc5, 0xff, 0x15, 0x1c, 0xf6, 0x72, 0x88, 0x71, 0x92, 0xae, 0x98, 0xfa, 0xa3, 0x2d, 0xe8,
	0x95, 0x58, 0x4f, 0x9b, 0xd0, 0x48, 0xa9, 0x3f, 0xfe, 0xc5, 0x81, 0xd6, 0xcb, 0x80, 0xc9, 0x04,
	0xbf, 0x80, 0x8e, 0x4c, 0x30, 0x0c, 0x98, 0x49, 0xef, 0x83, 0x82, 0x5a, 0x7b, 0xc9, 0xe4, 0xf4,
	0xb3, 0x8c, 0xa0, 0x4d, 0xf4, 0x14, 0xda, 0x34, 0xa4, 0x0b, 0x2b, 0xaf, 0xa1, 0x3d, 0x09, 0xf6,
	0x92, 0x4d, 0x6b, 0xb8, 0x25, 0x7c, 0x45, 0x62, 0x3d, 0x70, 0x2d, 0x46, 0x93, 0xd6, 0xef, 0x0e,
	0xb4, 0xcc, 0x46, 0x1e, 0x43, 0x2f, 0x31, 0xcb, 0x24, 0xd9, 0x9d, 0x6a, 0xd5, 0xf6, 0xae, 0x4d,
	0x6b, 0xb8, 0x9b, 0xd8, 0xbb, 0x77, 0x04, 0xa0, 0x14, 0xb7, 0x32, 0xdb, 0x59, 0xa1, 0xba, 0x68,
	0x21, 0xcb, 0x9b, 0x35, 0x81, 0xb6, 0x90, 0x41, 0x62, 0x1a, 0xd5, 0x85, 0x2f, 0xca, 0x6f, 0x85,
	0x3a, 0x6f, 0x17, 0x3a, 0xef, 0x49, 0x98, 0xc9, 0x04, 0xc7, 0x7f, 0x39, 0xd0, 0xbb, 0x94, 0xef,
	0x30, 0x53, 0xc3, 0x7d, 0xd0, 0x2f, 0xb5, 0x99, 0xfd, 0x72, 0x71, 0xd5, 0x99, 0x14, 0x07, 0x3d,
	0x86, 0x16, 0x49, 0x6f, 0xff, 0x51, 0x5b, 0x37, 0x49, 0x7a, 0x2b, 0x58, 0x3f, 0x87, 0x6e, 0x4a,
	0x59, 0x12, 0x47, 0x8c, 0x5a, 0x89, 0xae, 0xc7, 0xb9, 0xc6, 0x5b, 0x80, 0xbf, 0x84, 0x6d, 0xf2,
	0x36, 0xe0, 0x64, 0x46, 0xa2, 0x28, 0xe6, 0x84, 0x07, 0x71, 0xc4, 0x86, 0xae, 0x64, 0x18, 0x15,
	0x0c, 0x27, 0xc2, 0xe5, 0xa4, 0xf0, 0xc0, 0x03, 0x52, 0x39, 0x31, 0x2d, 0xfb, 0xc3, 0x81, 0xbe,
	0x12, 0xf3, 0x9a, 0x2e, 0x92, 0x90, 0x70, 0x8a, 0xde, 0xc0, 0x96, 0x9a, 0x55, 0xae, 0x4f, 0xd8,
	0xd0, 0xd9, 0x6d, 0xec, 0xb9, 0x87, 0xfb, 0x55, 0xfd, 0x0d, 0x64, 0x72, 0x2e, 0xfc, 0x8d, 0xc5,
	0x5e, 0x44, 0x3c, 0xbd, 0xc3, 0x7d, 0xbf, 0x74, 0x38, 0xfa, 0x0e, 0x76, 0x56, 0xb8, 0xad, 0xfc,
	0x16, 0x34, 0x65, 0x53, 0x96, 0x05, 0x15, 0x9a, 0x18, 0x38, 0x56, 0x4e, 0x9f, 0xd5, 0x3f, 0x75,
	0xc6, 0x97, 0xd0, 0x15, 0xcd, 0xcd, 0x2b, 0x38, 0x86, 0xbe, 0x1c, 0xea, 0x6a, 0x01, 0xeb, 0xa8,
	0x7a, 0xc2, 0x3b, 0xcf, 0x6b, 0xfc, 0x35, 0x0c, 0x5e, 0x27, 0x42, 0x25, 0x12, 0xda, 0x94, 0x6a,
	0x52, 0x0c, 0xe7, 0xf2, 0x3c, 0x97, 0x29, 0xa5, 0xb7, 0x31, 0xc7, 0x7f, 0xd6, 0xa1, 0x6b, 0xdf,
	0xa3, 0xe7, 0xb0, 0xa5, 0xe7, 0xbb, 0x42, 0x38, 0x5c, 0x27, 0xf2, 0xb4, 0x86, 0xfb, 0xac, 0xdc,
	0xa9, 0x63, 0xe8, 0xc9, 0x71, 0xcf, 0x29, 0x96, 0x14, 0xb3, 0x65, 0x11, 0x3b, 0x16, 0xda, 0x32,
	0x3d, 0x34, 0x42, 0xab, 0x09, 0xec, 0x97, 0x4b, 0x99, 0xd6, 0xb4, 0xc4, 0xe8, 0x63, 0x39, 0x2a,
	0xfa, 0xf3, 0xf2, 0xff, 0xc2, 0xab, 0xb4, 0x2c, 0xd3, 0x1a, 0x16, 0x5e, 0xe8, 0x02, 0xb6, 0x63,
	0x2d, 0x5e, 0x91, 0x57, 0xb3, 0x3a, 0xa0, 0x55, 0x7d, 0xa7, 0x35, 0x3c, 0x88, 0xab, 0x9a, 0x3f,
	0x84, 0x8d, 0x05, 0xe5, 0x44, 0x7f, 0x6a, 0x50, 0x39, 0xbd, 0x4b, 0xca, 0x09, 0x96, 0xf7, 0xa7,
	0x83, 0x6a, 0x6f, 0xc6, 0xbf, 0x35, 0xa0, 0xaf, 0xb2, 0xcb, 0xc9, 0xfa, 0x50, 0x0f, 0x3c, 0x3d,
	0x66, 0xf5, 0xc0, 0x43, 0x07, 0xd0, 0x31, 0xbb, 0xed, 0x69, 0xdd, 0x50, 0xb5, 0xb4, 0x8b, 0x33,
	0xdc, 0xd6, 0xcb, 0xee, 0xa1, 0xd7, 0xd0, 0x13, 0x9b, 0x5e, 0xcc, 0x54, 0x43, 0xce, 0xd4, 0xa3,
	0x2a, 0x28, 0x5f, 0x8a, 0x93, 0xf4, 0xb6, 0xb2, 0x12, 0x5d, 0x62, 0x1d, 0xa1, 0x17, 0xd0, 0x31,
	0x9b, 0xcd, 0x86, 0x1b, 0x92, 0xec, 0xa3, 0xb5, 0x64, 0xd8, 0x78, 0x2a, 0xa6, 0x02, 0x89, 0xf6,
	0xb4, 0x4a, 0xcd, 0xea, 0xe7, 0x51, 0x31, 0x14, 0x3a, 0x8d, 0xbe, 0x81, 0xed, 0xa5, 0x9c, 0xfe,
	0x8b, 0xfd, 0x1b, 0xbd, 0x84, 0x7e, 0x39, 0xbf, 0x15, 0xac, 0x0f, 0xca, 0xac, 0x95, 0x61, 0xb3,
	0xb7, 0x79, 0x06, 0xed, 0x2b, 0xfd, 0x93, 0xb9, 0xd4, 0xb5, 0xe7, 0x30, 0xd0, 0x5d, 0x2b, 0xfa,
	0x50, 0x97, 0xd2, 0x0d, 0xd7, 0x49, 0x87, 0xb7, 0x16, 0x25, 0x9b, 0x8d, 0xbf, 0x05, 0xd7, 0x04,
	0xc0, 0x59, 0x84, 0x1e, 0x40, 0x83, 0xd1, 0x77, 0xcb, 0x3f, 0x78, 0xb9, 0x8f, 0xb8, 0x46, 0x1f,
	0x42, 0x2f, 0xa5, 0x69, 0x16, 0xcd, 0x08, 0x17, 0xa1, 0xb9, 0xac, 0xa3, 0x89, 0xbb, 0xf2, 0xf0,
	0x44, 0x9d, 0x9d, 0xee, 0x7f, 0xff, 0x48, 0xbe, 0x68, 0x59, 0xec, 0xf3, 0x1f, 0x49, 0x4a, 0x27,
	0x37, 0xf1, 0xe2, 0x80, 0x65, 0x09, 0x4d, 0x19, 0x27, 0xe9, 0x41, 0x32, 0x3f, 0xb8, 0x8d, 0x0f,
	0x4c, 0x80, 0xf9, 0xa6, 0xfc, 0x3b, 0x7e, 0xf2, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0x34,
	0xc7, 0x84, 0x54, 0x0b, 0x00, 0x00,
}
